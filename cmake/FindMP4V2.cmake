# - find MP4 Advanced Audio Decoder
# MP4V2_INCLUDE_DIR - Where to find MP4 Advanced Audio Decoder header files (directory)
# MP4V2_LIBRARIES - MP4 Advanced Audio Decoder libraries
# MP4V2_LIBRARY_RELEASE - Where the release library is
# MP4V2_LIBRARY_DEBUG - Where the debug library is
# MP4V2_FOUND - Set to TRUE if we found everything (library, includes and executable)

# Copyright (c) 2012 Robert Massaioli, <robertmassaioli@gmail.com>
#
# Redistribution and use is allowed according to the terms of the BSD license.
# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
#
# Generated by CModuler, a CMake Module Generator - http://gitorious.org/cmoduler

IF( MP4V2_INCLUDE_DIR AND MP4V2_LIBRARY_RELEASE AND MP4V2_LIBRARY_DEBUG )
    SET(MP4V2_FIND_QUIETLY TRUE)
ENDIF( MP4V2_INCLUDE_DIR AND MP4V2_LIBRARY_RELEASE AND MP4V2_LIBRARY_DEBUG )

FIND_PATH( MP4V2_INCLUDE_DIR mp4v2.h PATH_SUFFIXES mp4v2 )

FIND_LIBRARY(MP4V2_LIBRARY_RELEASE NAMES mp4v2 )

FIND_LIBRARY(MP4V2_LIBRARY_DEBUG NAMES mp4v2  HINTS /usr/lib/debug/usr/lib/ )

IF( MP4V2_LIBRARY_RELEASE OR MP4V2_LIBRARY_DEBUG AND MP4V2_INCLUDE_DIR )
    SET( MP4V2_FOUND TRUE )
ENDIF( MP4V2_LIBRARY_RELEASE OR MP4V2_LIBRARY_DEBUG AND MP4V2_INCLUDE_DIR )

IF( MP4V2_LIBRARY_DEBUG AND MP4V2_LIBRARY_RELEASE )
    # if the generator supports configuration types then set
    # optimized and debug libraries, or if the CMAKE_BUILD_TYPE has a value
    IF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
        SET( MP4V2_LIBRARIES optimized ${MP4V2_LIBRARY_RELEASE} debug ${MP4V2_LIBRARY_DEBUG} )
    ELSE( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
        # if there are no configuration types and CMAKE_BUILD_TYPE has no value
        # then just use the release libraries
        SET( MP4V2_LIBRARIES ${MP4V2_LIBRARY_RELEASE} )
    ENDIF( CMAKE_CONFIGURATION_TYPES OR CMAKE_BUILD_TYPE )
ELSEIF( MP4V2_LIBRARY_RELEASE )
    SET( MP4V2_LIBRARIES ${MP4V2_LIBRARY_RELEASE} )
ELSE( MP4V2_LIBRARY_DEBUG AND MP4V2_LIBRARY_RELEASE )
    SET( MP4V2_LIBRARIES ${MP4V2_LIBRARY_DEBUG} )
ENDIF( MP4V2_LIBRARY_DEBUG AND MP4V2_LIBRARY_RELEASE )

IF( MP4V2_FOUND )
    IF( NOT MP4V2_FIND_QUIETLY )
        MESSAGE( STATUS "Found Mp4v2 header file in ${MP4V2_INCLUDE_DIR}")
        MESSAGE( STATUS "Found Mp4v2 libraries: ${MP4V2_LIBRARIES}")
    ENDIF( NOT MP4V2_FIND_QUIETLY )
ELSE(MP4V2_FOUND)
    IF( MP4V2_FIND_REQUIRED)
        MESSAGE( FATAL_ERROR "Could not find Mp4v2" )
    ELSE( MP4V2_FIND_REQUIRED)
        MESSAGE( STATUS "Optional package Mp4v2 was not found" )
    ENDIF( MP4V2_FIND_REQUIRED)
ENDIF(MP4V2_FOUND)

MARK_AS_ADVANCED(
        MP4V2_LIBRARY_DEBUG
        MP4V2_LIBRARY_RELEASE
)